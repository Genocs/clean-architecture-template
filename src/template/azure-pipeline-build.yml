pool:
  name: Azure Pipelines
#Your build pipeline references an undefined variable named ‘Parameters.RestoreBuildProjects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build pipeline references an undefined variable named ‘Parameters.TestProjects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build pipeline references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971

steps:
  - task: NuGetAuthenticate@0
    displayName: "NuGet Authenticate"

  - task: DotNetCoreCLI@2
    displayName: "Build projects"
    inputs:
      projects: "$(Parameters.RestoreBuildProjects)"
      arguments: "--configuration $(BuildConfiguration)" # Update this to match your need

  # Run the Test (after building)
  - task: DotNetCoreCLI@2
    displayName: "Run tests"
    inputs:
      command: "test"
      projects: "$(Parameters.TestProjects)"
      arguments: "--configuration $(BuildConfiguration)"

  # Publish the artifact to be ready for deploy
  - task: DotNetCoreCLI@2
    displayName: Publish
    inputs:
      command: "publish"
      publishWebProjects: true
      arguments: "--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)"
      zipAfterPublish: True

  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifact"
    inputs:
      pathToPublish: "$(build.artifactstagingdirectory)"
    condition: succeededOrFailed()
