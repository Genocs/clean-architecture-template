# Build and push a Docker image to Docker hub
# The stage contains a couple of build and push
# one for the Version and one for Latest
# https://aka.ms/yaml
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

name: Build Docker Image and publish on Docker Hub

trigger:
  - none

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: "Release"
  imageName: "$(DockerRegistry)/$(DockerImageName)"

stages:
  - stage: Build
    displayName: Build image
    jobs:
      - job: Build
        displayName: Build and push Docker image
        steps:
          - task: Docker@1
            displayName: "Build the Docker image"
            inputs:
              containerRegistryType: "Container Registry"
              dockerRegistryEndpoint: "DockerHub"
              command: "Build an image"
              dockerFile: "Dockerfile"
              arguments: "--build-arg BuildId=$(Build.BuildId)"
              includeLatestTag: true
              imageName: "$(ImageName)"

          - task: Docker@1
            displayName: "Push the Docker image to Docker Hub"
            inputs:
              containerRegistryType: "Container Registry"
              dockerRegistryEndpoint: "DockerHub"
              command: "Push an image"
              imageName: "$(ImageName)"
            condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

          - task: Docker@1
            displayName: "Tag-Latest Build the Docker image"
            inputs:
              containerRegistryType: "Container Registry"
              dockerRegistryEndpoint: "DockerHub"
              command: "Build an image"
              dockerFile: "Dockerfile"
              arguments: "--build-arg BuildId=$(Build.BuildId)"
              imageName: "$(ImageName):$(MajorVer).$(MinorVer).$(Build.BuildId)"

          - task: Docker@1
            displayName: "Tag-Latest Push the Docker image to Docker Hub"
            inputs:
              containerRegistryType: "Container Registry"
              dockerRegistryEndpoint: "DockerHub"
              command: "Push an image"
              imageName: "$(ImageName):$(MajorVer).$(MinorVer).$(Build.BuildId)"

            condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
